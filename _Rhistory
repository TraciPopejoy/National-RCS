library(ggpubr)
library(sf)
library(ggplot2)
library(mapdata)
library(sp)
library(maps)
library(rgdal)
library(maptools)
library(RColorBrewer)
library(mapproj)
library(ggmap)
library(rgeos)
library(dplyr)
library(geosphere)
library(adehabitatHR)
install.packages(c("geosphere", "maps", "rlang"))
install.packages(c("ggmap", "mapproj", "maptools"))
library("ggpubr", lib.loc="~/R/win-library/3.6")
library("sf", lib.loc="~/R/win-library/3.6")
install.packages("sf")
install.packages("mapdata")
library(ggpubr)
library(sf)
library(ggplot2)
library(mapdata)
library(sp)
library(maps)
library(rgdal)
library(maptools)
library(RColorBrewer)
library(mapproj)
library(ggmap)
library(rgeos)
library(dplyr)
library(geosphere)
library(adehabitatHR)
install.packages(c("dplyr", "rgdal"))
install.packages(c("dplyr", "rgdal"))
library(ggpubr)
library(sf)
library(ggplot2)
library(mapdata)
library(sp)
library(maps)
library(rgdal)
library(maptools)
library(RColorBrewer)
library(mapproj)
library(ggmap)
library(rgeos)
library(dplyr)
library(geosphere)
library(adehabitatHR)
rm(list=ls())
setwd("G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP")
fishtraits <- read.csv("FishTraitsSpeciesSelection.csv", header = TRUE)
FILES <- list.files(path="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/Final location data/", pattern = ".csv") #create file list for loop
species_fishtraits = NULL
for (i in 1:length(FILES)){
dat <- read.csv(paste("G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/Final location data/", FILES[i], sep = ""), header=TRUE)
species <- as.character(dat[2,10])
species_split <- strsplit(species, " ")
species_split <- as.data.frame(unlist(species_split))
a_species = as.character(species_split[2,1])
b_genus = as.character(species_split[1,1])
extraction <- fishtraits[which(fishtraits$SPECIES == a_species & fishtraits$GENUS == b_genus),]
species_fishtraits[[i]] <- extraction
}
species_fishtraits1 <- do.call(rbind.data.frame, species_fishtraits)
a <- "Phoxinus"
b <- "erythrogaster"
extraction <- fishtraits[which(fishtraits$SPECIES == b & fishtraits$GENUS == a),]
species_fishtraits1[120,] <- extraction
View(extraction)
a <- "Lampetra"
b <- "tridentata"
extraction <- fishtraits[which(fishtraits$SPECIES == b & fishtraits$GENUS == a),]
species_fishtraits1[121,] <- extraction
View(fishtraits)
a <- "Cycleptus"
b <- "elongatus"
extraction <- fishtraits[which(fishtraits$SPECIES == b & fishtraits$GENUS == a),]
species_fishtraits1[122,] <- extraction
a <- "Moxostoma"
b <- "duquesnei"
extraction <- fishtraits[which(fishtraits$SPECIES == b & fishtraits$GENUS == a),]
View(species_fishtraits1)
library(ggpubr)
library(sf)
library(ggplot2)
library(mapdata)
library(sp)
library(maps)
library(rgdal)
library(maptools)
library(RColorBrewer)
library(mapproj)
library(ggmap)
library(rgeos)
library(dplyr)
library(geosphere)
library(adehabitatHR)
#gets maps needed for subsetting and plotting
US <- map_data("state")#converts state map to dataframe for mapping with ggplot2
usa <- map("usa") #gets map for subsetting entries. Map of the lower 48 obtained through Package âmapsâ
#version 3.3.0 (Becker et al. 2018) in Program R (R Core Team 2016);
main <- map_data("usa", region=c("main"))#subsets map points to only mainland, no islands
#converts from dataframe to spatial polygon
df <- data.frame(main$long, main$lat) #dataframe of longitude and latitude
p <- Polygon(df)
ps<- Polygons(list(p), ID=1)
USAsp <- SpatialPolygons(list(ps), proj4string = CRS("+init=epsg:4326 +proj=longlat +ellps=WGS84 +datum=WGS84")) #spatial polygon of the desired location
library(scales)
library(readr)
library(tidyverse)
library(rgbif)
library(sf)
library(rgdal)
library(sp)
library(rgeos)
library(adehabitatHR)
#2a. Imports standard deviations for climatic data that indicate climate breath for each species at the HUC12 level
SD_1km_ppt <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_ppt.csv")
SD_1km_tmax <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmax.csv")
SD_1km_tmaxAug <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmaxAug.csv")
SD_1km_tmin <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmin.csv")
SD_1km_tminJan <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tminJan.csv")
SD_1km_all <- data.frame(SD_1km_ppt, SD_1km_tmax, SD_1km_tmaxAug, SD_1km_tmin, SD_1km_tminJan)
SD_1km_all <- SD_1km_all[ -c(3,5,7,9) ]
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd"] <- "SD_1km_ppt"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.1"] <- "SD_1km_tmax"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.2"] <- "SD_1km_tmaxAug"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.3"] <- "SD_1km_tmin"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.4"] <- "SD_1km_tminJan"
View(SD_1km_all)
#2b. Scales standard deviations for each climatic variable (n=5) between 0 and 1
SD_1km_all$SD_ppt_Scale <- ((SD_1km_all$SD_1km_ppt - min(SD_1km_all$SD_1km_ppt))/(max(SD_1km_all$SD_1km_ppt, na.rm=TRUE) - min(SD_1km_all$SD_1km_ppt, na.rm=TRUE)))
SD_1km_all$SD_TMax_Scale <- ((SD_1km_all$SD_1km_tmax - min(SD_1km_all$SD_1km_tmax))/(max(SD_1km_all$SD_1km_tmax, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmax, na.rm=TRUE)))
SD_1km_all$SD_TMaxAug_Scale <- ((SD_1km_all$SD_1km_tmaxAug - min(SD_1km_all$SD_1km_tmaxAug))/(max(SD_1km_all$SD_1km_tmaxAug, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmaxAug, na.rm=TRUE)))
SD_1km_all$SD_TMin_Scale <- ((SD_1km_all$SD_1km_tmin - min(SD_1km_all$SD_1km_tmin))/(max(SD_1km_all$SD_1km_tmin, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmin, na.rm=TRUE)))
SD_1km_all$SD_TMinJan_Scale <- ((SD_1km_all$SD_1km_tminJan - min(SD_1km_all$SD_1km_tminJan))/(max(SD_1km_all$SD_1km_tminJan, na.rm=TRUE) - min(SD_1km_all$SD_1km_tminJan, na.rm=TRUE)))
#2c. Calculates the mean of the 5 scaled standard deviations to derive a mean relative climate breath for each species
SD_1km_all$CS <- ((SD_1km_all$SD_TMax_Scale + SD_1km_all$SD_ppt_Scale + SD_1km_all$SD_TMaxAug_Scale + SD_1km_all$SD_TMin_Scale + SD_1km_all$SD_TMinJan_Scale)/5)
#Already changed from prior steps: names(All_AOO)[1]<-"Species"
names(SD_1km_all)[1] <-"Species"
library(prism)
library(zoo)
library(tidyverse)
options(prism.path = "~/prismtmp")
get_prism_annual(type = "tmax", year = 1895:2014, keepZip = FALSE)
transcript_count_matrix <- read.csv("C:/Users/Sam/Desktop/i2gds/DESeq/transcript_count_matrix.csv", row.names=1)
View(transcript_count_matrix)
transcript_count_matrix <- colnames(gsub("", "Solyc_M82_"))
tcm <- transcript_count_matrix
colnames(tcm) <- gsub("Solyc_M82_", "", colnames(tcm))
View(tcm)
View(tcm)
tcm<- tcm[rowSums(tcm)>=1,]
cor.tcm <- cor(tcm, method = "spearman")
View(cor.tcm)
plot(cor.tcm$Root0DPI_rp1, cor.tcm$Root0DPI_rp2, aes(pch=19, col="red"))
plot(cor.tcm$Root0DPI_rp1, cor.tcm$Root0DPI_rp2, aes(pch=19))
plot(cor.tcm$Root0DPI_rp1, cor.tcm$Root0DPI_rp2, pch=19)
plot(cor.tcm$Root0DPI_rp1, cor.tcm$Root0DPI_rp2)+ aes(pch=19)
View(tcm)
plot(cor.tcm, Root0DPI_rp1, Root0DPI_rp2)+ aes(pch=19)
setwd("G:/My Drive/I2GDS - Group GWAS")
setwd("G:/My Drive/I2GDS - Group GWAS")
fet_table<-function(x) {
f=x<-read.csv("GWAS_dataset_Original.csv")
a=colnames(f)<-gsub("X","Pops",colnames(f))
b=colnames(f)<-gsub("CHROM","Chromosome",colnames(f))
c=colnames(f)<-gsub("POS","Position",colnames(f))
d=colnames(f)<-gsub("D","Depth",colnames(f))
return(f);
}
GWAS_data<-fet_table(hj)
View(GWAS_data)
setwd("G:/My Drive/I2GDS - Group GWAS")
fet_table<-function(x) {
f=x<-read.csv("GWAS_dataset_Original.csv")
a=colnames(f)<-gsub("X","Pops",colnames(f))
b=colnames(f)<-gsub("CHROM","Chromosome",colnames(f))
c=colnames(f)<-gsub("POS","Position",colnames(f))
d=colnames(f)<-gsub("D","Depth",colnames(f))
return(f);
}
GWAS_data<-fet_table(hj)
GWAS_O <- read.csv("GWAS_dataset_Original.csv")
View(GWAS_O)
fet_filtered<-function(x)  {
a=subset(x,Depth>=50)
b=subset(x,Pops1_2<=10 & Pops3_4<=10)
return(b);
}
GWAS_dataff<-fet_filtered(GWAS_data)
View(GWAS_dataff)
fet_filtered<-function(x)  {
a=subset(x,Depth>=50)
b=subset(x,Pops1_2<=10)+ subset(x,Pops3_4<=10)
return(b);
}
GWAS_dataff<-fet_filtered(GWAS_data)
fet_filtered<-function(x)  {
a=subset(x,Depth>=50)
b=subset(x,Pops1_2<=10), subset(x,Pops3_4<=10)
fet_filtered<-function(x)  {
a=subset(x,Depth>=50)
b=subset(x,Pops1_2<=10 & Pops3_4<=10)
return(b);
}
GWAS_dataff<-fet_filtered(GWAS_data)
setwd("G:/My Drive/I2GDS - Group GWAS")
fet_table<-function(x) {
f=x<-c(read.csv("GWAS_dataset_Original.csv")[1:9])
a=colnames(f)<-gsub("X","Pops",colnames(f))
b=colnames(f)<-gsub("CHROM","Chromosome",colnames(f))
c=colnames(f)<-gsub("POS","Position",colnames(f))
d=colnames(f)<-gsub("D","Depth",colnames(f))
return(f);
}
GWAS_data<-fet_table(hj) # The output for Step 1
setwd("G:/My Drive/I2GDS - Group GWAS")
fet_table<-function(x) {
f1=x<-read.csv("GWAS_dataset_Original.csv")
f=c(f1[1:9])
a=colnames(f)<-gsub("X","Pops",colnames(f))
b=colnames(f)<-gsub("CHROM","Chromosome",colnames(f))
c=colnames(f)<-gsub("POS","Position",colnames(f))
d=colnames(f)<-gsub("D","Depth",colnames(f))
return(f);
}
GWAS_data<-fet_table(hj) # The output for Step 1
setwd("G:/My Drive/I2GDS - Group GWAS")
fet_table<-function(x) {
f1=x<-read.csv("GWAS_dataset_Original.csv")
f=f1[1:9]
a=colnames(f)<-gsub("X","Pops",colnames(f))
b=colnames(f)<-gsub("CHROM","Chromosome",colnames(f))
c=colnames(f)<-gsub("POS","Position",colnames(f))
d=colnames(f)<-gsub("D","Depth",colnames(f))
return(f);
}
GWAS_data<-fet_table(hj) # The output for Step 1
GWAS_O <- read.csv("GWAS_dataset_Original.csv") # Add the original to compare, will remove
View(GWAS_data)
fet_filtered<-function(x)  {
a=subset(x,Depth>=50)
b=subset(x,Pops1_2<=10 & Pops3_4<=10)
return(b);
}
GWAS_dataff<-fet_filtered(GWAS_data)
fet_contrasts<-function(x)  {
a=x$mean_within <- rowMeans(x[c('Pops1_2', 'Pops3_4')], na.rm=TRUE)
b=x$mean_between<-rowMeans(x[c('Pops1_3','Pops1_4','Pops2_3','Pops2_4')],na.rm=TRUE)
c=x$contrast<-x$mean_between-x$mean_within
return(x);
}
GWAS_datacc<-fet_contrasts(GWAS_dataff)
View(GWAS_datacc)
install.packages("qqman")
library(qqman)
GWAS_mp<-GWAS_datacc()
library(qqman)
GWAS_mp<-GWAS_datacc
manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrasts",col=c("gray10","gray60"))
library(qqman)
GWAS_mp<-GWAS_datacc
manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrast",col=c("gray10","gray60"))
library(qqman)
GWAS_mp<-GWAS_datacc
colnames(GWAS_mp$Chromosome) <- gsub("SL2.50ch", "", colnames(GWAS_mp$Chromosome))
library(qqman)
GWAS_mp<-GWAS_datacc
GWAS_mp <- gsub("SL2.50ch", "", colnames(GWAS_mp$Chromosome))
manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrast",col=c("gray10","gray60"))
library(qqman)
GWAS_mp<-GWAS_datacc
colnames(GWAS_mp) <- gsub("SL2.50ch", "", colnames(GWAS_mp))
manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrast",col=c("gray10","gray60"))
View(GWAS_mp)
library(qqman)
GWAS_mp<-gsub("SL2.50ch", "", colnames(GWAS_datacc))
#colnames(GWAS_mp) <- gsub("SL2.50ch", "", colnames(GWAS_mp))
#manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrast",col=c("gray10","gray60"))
library(qqman)
GWAS_datacc<-gsub("SL2.50ch", "", colnames(GWAS_datacc))
GWAS_mp <- GWAS_datacc
#manhattan(GWAS_mp,chr="Chromosome",bp="Position", p="contrast",col=c("gray10","gray60"))
#library(qqman)
GWAS_mp <- GWAS_datacc
GWAS_mp$Chromosome <- gsub("SL2.50ch", "", GWAS_datacc$Chromosome))
#library(qqman)
GWAS_mp <- GWAS_datacc
GWAS_mp$Chromosome <- gsub("SL2.50ch", "", GWAS_datacc$Chromosome)
#library(qqman)
GWAS_mp <- GWAS_datacc
GWAS_mp <- gsub("SL2.50ch", "", GWAS_datacc$Chromosome)
library(scales)
library(readr)
library(tidyverse)
library(rgbif)
library(sf)
library(rgdal)
library(sp)
library(rgeos)
library(adehabitatHR)
SD_1km_ppt <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_ppt.csv")
SD_1km_tmax <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmax.csv")
SD_1km_tmaxAug <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmaxAug.csv")
SD_1km_tmin <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tmin.csv")
SD_1km_tminJan <- read.csv(file="G:/My Drive/Virginia Tech/Fish Traits/Git Data - NFVAP/NFVAP/RCS Files/1km_PRISM/sd_tminJan.csv")
SD_1km_all <- data.frame(SD_1km_ppt, SD_1km_tmax, SD_1km_tmaxAug, SD_1km_tmin, SD_1km_tminJan)
SD_1km_all <- SD_1km_all[ -c(3,5,7,9) ]
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd"] <- "SD_1km_ppt"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.1"] <- "SD_1km_tmax"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.2"] <- "SD_1km_tmaxAug"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.3"] <- "SD_1km_tmin"
colnames(SD_1km_all)[colnames(SD_1km_all)=="matrix_sd.4"] <- "SD_1km_tminJan"
View(SD_1km_all)
SD_1km_all$SD_ppt_Scale <- ((SD_1km_all$SD_1km_ppt - min(SD_1km_all$SD_1km_ppt))/(max(SD_1km_all$SD_1km_ppt, na.rm=TRUE) - min(SD_1km_all$SD_1km_ppt, na.rm=TRUE)))
SD_1km_all$SD_TMax_Scale <- ((SD_1km_all$SD_1km_tmax - min(SD_1km_all$SD_1km_tmax))/(max(SD_1km_all$SD_1km_tmax, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmax, na.rm=TRUE)))
SD_1km_all$SD_TMaxAug_Scale <- ((SD_1km_all$SD_1km_tmaxAug - min(SD_1km_all$SD_1km_tmaxAug))/(max(SD_1km_all$SD_1km_tmaxAug, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmaxAug, na.rm=TRUE)))
SD_1km_all$SD_TMin_Scale <- ((SD_1km_all$SD_1km_tmin - min(SD_1km_all$SD_1km_tmin))/(max(SD_1km_all$SD_1km_tmin, na.rm=TRUE) - min(SD_1km_all$SD_1km_tmin, na.rm=TRUE)))
SD_1km_all$SD_TMinJan_Scale <- ((SD_1km_all$SD_1km_tminJan - min(SD_1km_all$SD_1km_tminJan))/(max(SD_1km_all$SD_1km_tminJan, na.rm=TRUE) - min(SD_1km_all$SD_1km_tminJan, na.rm=TRUE)))
#2c. Calculates the mean of the 5 scaled standard deviations to derive a mean relative climate breath for each species
SD_1km_all$CS <- ((SD_1km_all$SD_TMax_Scale + SD_1km_all$SD_ppt_Scale + SD_1km_all$SD_TMaxAug_Scale + SD_1km_all$SD_TMin_Scale + SD_1km_all$SD_TMinJan_Scale)/5)
#Already changed from prior steps: names(All_AOO)[1]<-"Species"
names(SD_1km_all)[1] <-"Species"
